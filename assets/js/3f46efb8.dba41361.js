"use strict";(self.webpackChunkskip_docs=self.webpackChunkskip_docs||[]).push([[145],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),p=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=p(e.components);return r.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),k=p(t),d=a,u=k["".concat(o,".").concat(d)]||k[d]||c[d]||i;return t?r.createElement(u,s(s({ref:n},m),{},{components:t})):r.createElement(u,s({ref:n},m))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=k;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var p=2;p<i;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},3819:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return m},default:function(){return k}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),s=["components"],l={sidebar_position:5},o="Kubernetes manifestfiler",p={unversionedId:"getting-started/kubernetes-manifests",id:"getting-started/kubernetes-manifests",isDocsHomePage:!1,title:"Kubernetes manifestfiler",description:"Om manifestfiler",source:"@site/docs/getting-started/kubernetes-manifests.md",sourceDirName:"getting-started",slug:"/getting-started/kubernetes-manifests",permalink:"/docs/getting-started/kubernetes-manifests",editUrl:"https://github.com/kartverket/skip-docs/edit/main/docs/getting-started/kubernetes-manifests.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Grupper og prosjekter i GitLab",permalink:"/docs/getting-started/groups-and-projects-in-gitlab"},next:{title:"Login og tilgang til cluster milj\xf8er",permalink:"/docs/getting-started/login-and-access-to-cluster"}},m=[{value:"Om manifestfiler",id:"om-manifestfiler",children:[]},{value:"Sentrale konsepter",id:"sentrale-konsepter",children:[]},{value:"Enkel eksempelfil",id:"enkel-eksempelfil",children:[]},{value:"Kommunikasjon mellom pods",id:"kommunikasjon-mellom-pods",children:[]}],c={toc:m};function k(e){var n=e.components,t=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"kubernetes-manifestfiler"},"Kubernetes manifestfiler"),(0,i.kt)("h2",{id:"om-manifestfiler"},"Om manifestfiler"),(0,i.kt)("p",null,"For \xe5 deploye noe til Kubernetes trengs som et minimum en manifestfil."),(0,i.kt)("p",null,"Dette er en beskrivelse av hvordan den totale applikasjonen skal se ut, og kan\ntenkes p\xe5 som en mer avansert docker-compose fil."),(0,i.kt)("p",null,"Kan ogs\xe5 bruke ",(0,i.kt)("a",{parentName:"p",href:"https://k8syaml.com/"},"https://k8syaml.com/")," for \xe5 generere en manifestfil, men mulig\ndenne m\xe5 tilpasses litt avhengig av applikasjon/kj\xf8remilj\xf8."),(0,i.kt)("p",null,"Man kan, som illustrert i eksempelet, inkludere flere manifest i en og samme\nfil, s\xe5 lenge de er adskilt med ---. Man kan ogs\xe5 ha flere manifestfiler."),(0,i.kt)("p",null,"Best practice er \xe5 samle alt som henger sammen i en og samme manifestfil, ref.\nden offisielle dokumentasjonen:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Group related objects into a single file whenever it makes sense. One file is\noften easier to manage than several. See the guestbook-all-in-one.yaml file as\nan example of this syntax.")),(0,i.kt)("p",null,"Dersom man har en st\xf8rre applikasjon hvor man \xf8nsker \xe5 fordele over flere\nmanifestfiler, er det uansett en fordel \xe5 samle det s\xe5 mye som mulig:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"It is a recommended practice to put resources related to the same microservice\nor application tier into the same file, and to group all of the files\nassociated with your application in the same directory.")),(0,i.kt)("h2",{id:"sentrale-konsepter"},"Sentrale konsepter"),(0,i.kt)("p",null,"Her nevnes utvalgte konsepter som man kan komme over i forbindelse med\nKubernetes-API'et. En mer utfyllende liste ligger her:\n",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/kubernetes-api/"},"https://kubernetes.io/docs/reference/kubernetes-api/")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pod - en ansamling containere som kj\xf8rer p\xe5 samme host. Best practice er\n1 container per pod, bortsett fra i spesialtilfeller (initContainers etc.)"),(0,i.kt)("li",{parentName:"ul"},'ReplicaSet - spesifiserer minimumsantall av en gitt pod som skal kj\xf8re til\nenhver tid. Hvis en pod i et replicaset g\xe5r ned, kj\xf8res automatisk en ny opp.\nAngis med n\xf8kkelordet "replicas" i manifestet'),(0,i.kt)("li",{parentName:"ul"},"StatefulSet - som ReplicaSet, men angir at disse pod'ene skal v\xe6re stateful,\ndvs at de har mer spesifikke krav til konsistens, identitet og state."),(0,i.kt)("li",{parentName:"ul"},"Service - en navngitt abstraksjon av en gitt tjeneste. Kan f.eks. brukes til\n\xe5 sette opp en LoadBalancer for \xe5 gi tilgang til en applikasjon utenfra\nnamespace/cluster, eller for \xe5 fasilitere kommunikasjon mellom pod'er internt."),(0,i.kt)("li",{parentName:"ul"},'Labels - egendefinerte "merkelapper" man kan bruke for \xe5 skille mellom og\nreferere til ulike Kubernetes-objekter. Se\n',(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/"},"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/"))),(0,i.kt)("h2",{id:"enkel-eksempelfil"},"Enkel eksempelfil"),(0,i.kt)("p",null,"Denne eksemplefilen lager en deployment ut fra en container med navn\ngitlab-demo. I tillegg setter den opp en LoadBalancer-service for \xe5 gi tilgang\nutenfra (utenfra clusteret, ikke n\xf8dvendigvis utenfra Kartverks-nettet, der m\xe5\nandre l\xf8sninger p\xe5 plass)."),(0,i.kt)("p",null,'Verdt \xe5 merke seg her er "securityContext". Dette beskriver enkelte\nsikkerhetsbegrensninger pod\'en m\xe5 kj\xf8re med. I dette tilfellet angis "runAsUser"\nfor at containeren skal kj\xf8re med en angitt bruker-uid (m\xe5 svare til en uid\nopprettet i Dockerfile), samt "allowPrivilegeEscalation: false" slik at\ncontaineren ikke kan eskalere til \xe5 kj\xf8re som privilegert bruker.'),(0,i.kt)("p",null,"En annen ting verdt \xe5 merke seg her er annotasjonen\nexternal-dns.alpha.kubernetes.io/hostname p\xe5 Service-objektet. Dette er en\nannotasjon som plukkes opp av external-dns, og som lar deg aksessere servicen\nved hjelp av en URL. Verdien til denne m\xe5 v\xe6re p\xe5 formatet <\xf8nsket\nnavn>.test.k8s.local ."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Namespace\nmetadata:\n  name: example\n---\napiVersion: v1\nkind: Deployment\nmetadata:\n  name: gitlab-demo\n  namespace: example\nspec:\n  selector:\n    matchLabels:\n      app: gitlab-demo-pod\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: gitlab-demo-pod\n    spec:\n      containers:\n        - name: gitlab-demo-container\n          image: harbor.statkart.no/example/gitlab-demo:1.0.262\n          ports:\n            - containerPort: 80\n          securityContext:\n            runAsUser: 1242\n            allowPrivilegeEscalation: false\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: gitlab-demo-service\n  namespace: example\n  annotations:\n    external-dns.alpha.kubernetes.io/hostname: gitlab-demo-app.test.k8s.local # to access the service, specify the URL you would like here on the format <name>.test.k8s.local\nspec:\n  selector:\n    app: gitlab-demo-pod\n  ports:\n    - port: 80\n      targetPort: 8080\n  type: LoadBalancer\n")),(0,i.kt)("h2",{id:"kommunikasjon-mellom-pods"},"Kommunikasjon mellom pods"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"TODO: oppdatere n\xe5r vi har f\xe5tt POCet og tatt beslutning p\xe5 service mesh.")),(0,i.kt)("p",null,"For \xe5 kommunisere mellom pods internt i applikasjonen er vi som minimum n\xf8dt til \xe5 bruke en service. Dette fordi vi aldri kan v\xe6re sikker p\xe5 at IP-adressen til en pod vil v\xe6re den samme. Ved \xe5 bruke en service til \xe5 aksessere en gitt pod, s\xf8rger vi for at servicen holder styr p\xe5 DNS og alltid blir oppdatert med ny IP dersom pod'en skulle endre seg."),(0,i.kt)("p",null,"Legg merke til et par nye ting her:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Vi har introdusert en ny label kalt "tier". Dette er egendefinert, og brukes til \xe5 skille mellom flere pod\'er tilh\xf8rende samme applikasjon. Hva man kaller labels eller hvordan man gj\xf8r dette er opp til hver enkelt, labels er egendefinerte - eneste krav er at de henger sammen internt, og ikke er et Kubernetes-n\xf8kkelord'),(0,i.kt)("li",{parentName:"ul"},'Vi har som nevnt ovenfor introdusert en ny service for \xe5 tilg\xe5 det nye deploymentet "example-backend". Den bruker en selector basert p\xe5 label\'ene "example" og "backend" for \xe5 identifisere korrekt pod.')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Namespace\nmetadata:\n  name: example\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: example-frontend\n  namespace: example\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: example\n      tier: frontend\n  template:\n    metadata:\n      labels:\n        app: example\n        tier: frontend\n    spec:\n      containers:\n        - name: example-klient-container\n          image: harbor.statkart.no/foo/foobar-klient:0.1.0.9999\n          ports:\n            - containerPort: 8080\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: example-backend\n  namespace: example\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: example\n      tier: backend\n  template:\n    metadata:\n      labels:\n        app: example\n        tier: backend\n    spec:\n      containers:\n        - name: example-backend-container\n          image: harbor.statkart.no/foo/foobar-backend:0.1.9999\n          securityContext:\n            runAsUser: 1242\n          ports:\n            - containerPort: 8082\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: example-service\n  namespace: example\n  annotations:\n    external-dns.alpha.kubernetes.io/hostname: example.test.k8s.local\nspec:\n  selector:\n    app: example\n    tier: frontend\n  ports:\n    - port: 80\n      targetPort: 80\n  type: LoadBalancer\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: example-backend-service\n  namespace: example\nspec:\n  selector:\n    app: example\n    tier: backend\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 8082\n")),(0,i.kt)("p",null,"N\xe5r servicen er opprettet kan man referere til den ved hjelp av navnet, som blir et internt DNS-record i namespacet. F.eks gjennom en proxy.conf i nginx dersom frontend er en webapplikasjon med nginx som base-image:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"http {\n        location /example/api/ {\n            proxy_pass http://example-backend-service;\n        }\n    }\n}\n")))}k.isMDXComponent=!0}}]);